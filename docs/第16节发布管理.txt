敏捷的一大优势就是可以提前发布价值。
提前发布价值可以帮助我们确定是不是走在正确的开发方向上。
同时，
对有些项目而言，
提前发布价值可以带来收入，
从而帮助我们转动业务“飞轮”，
实现业务的自循环和自增长。
因此敏捷和“精益创业”的产品开发流程是绝佳的组合，两者结合在一起可以发挥双剑合璧的威力。
同样在发布管理上，没有“精益创业”的产品开发流程，发布管理很容易又回到瀑布模式。
线性和迭代，这是完全不同的发布策略，也是完全不同的思考模式。
今天的产品开发是价值驱动的开发。
从竞争中获胜的一条关键经验就是更快。
而发布就是验证的开始，
只有发布后，
产品才能带给我们数据，
我们才能用业务相关的“领先指标”来衡量产品有没有为用户创造价值。
人们对Scrum的一个普遍的误解，即认为发布智能发生在“冲刺”结束之时。
但实际上《Scrum指南》中并没有规则禁止在一个“冲刺”中途“完成”某个PBI，并做发布。
也就是说，
如果条件允许，
通常是Scrum团队和“利益相关者”有着足够的信任基础，
团队可以让“完成”的定义中包括“已发布”这一元素。
这样，“冲刺评审”会议就可以直接检视已经存在于产品中的“增量”。
这样显然可以加快验证的速度。
在“精益”的思想里，在将功能交付客户之前做的所有工作成就都是“库存”，“库存”就是浪费。
如果“产品代表项目列表”是按独立、有价值的功能来组织的，一旦功能完成，为什么还要等待？
为什么要让“库存”不断增加？
为什么要拖延学习和验证？
“产品负责人”要关注是什么在阻碍团队采用迭代发布的模式？
是技术？
内部流程？
合规性？
还是对客户的吸引力？
有时候是客户不希望团队有新的发布。
研究隐藏在背后的原因就非常重要。
迭代发布的策略能不断为客户提供有价值的功能，
当客户看到他们的投资持续得到回报时，
他们的注意力就会聚焦于产品本身，
而不会像以前那样对交付日期有着执念。
这也让开发团队更容易获得预算。
因此，
从“精益创业”的角度看，
敏捷开发过程中衡量功能是否达到发布标准，
不仅取决于功能是否达到“完成”标准，
更取决于是否符合“最小可用产品”，
即MVP的发布标准。
如果你已经有了一个“产品代办事项列表”，那另一个影响产品发布计划的因素就是“开发速率”。
估算“开发速率”是一件困难的事情。
但很显然，一支稳定的团队会有比较一致的速度。
因此也更容易预测。
同时，固定的“冲刺”周期也能帮助我们更好的估算“开发速率”。
一种简单的方法，是用PBI来衡量。
一个稳定的开发团队，一个“冲刺”长度为四周，每个冲刺产出十个PBI。
如果客户想知道从现在起三个月的发布中能包括多少功能。
那三个月假如可以完成三个“冲刺”，
用“冲刺”数乘以每个“冲刺”产出的PBI数，
我们就得到了三十个PBI的结果。
相反，如果客户想知道完成五十个PBI需要多长时间，可以把上述公式中的参数简单做个交换来计算。
即PBI总数除以每个“冲刺”产出的PBI数，然后乘上一个“冲刺”的长度，得到结果就是二十周。
当然这个方法看似简单，然而在真实的环境中由于受到各种内外部因素的影响，团队的速度总是变化的。
因此直接用这个公式向“利益相关者”展示结果会导致一种错误的感觉：估算是精确的，计划是确定的。
但要知道这实际上完全是假象。
同样这也不适合新团队，新的Scrum团队的“开发速率”是不稳定。
通常要跑几个迭代以后,多数团队的速率才会稳定下来。
另外，很显然，这个计算方法和PBI大小有关，如果我们开发的项目PBI大小差异很大。
这时就需要特别处理，例如用“故事点”来替代PBI做估算。
所有预测信息是为了发布决策服务。
当预期和显示可能不符时，
我们有三种选择：一是更改发布日期；
二是增加资源提高速度以完成所有的需求范围；
三是调整需求范围。
这时候“燃尽图”就往往很有用的。
通过比较开发的进程和我们的预期是否相符。
可以帮助我们提前做出合适的判断。
最后，正确的启动的发布成功非常重要。
飞机要起飞，先要搞清楚目的地。“
产品目标”正是启动的目的地。
我们往往用“以终为始”的方法，拆解启动需要解决的问题。“
产品负责人”往往需要同“利益相关者”和其他团队协作，并提供相应的启动方案。
